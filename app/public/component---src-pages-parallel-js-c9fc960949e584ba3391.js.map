{"version":3,"sources":["webpack://lgbtq-state-equality-index/./src/components/d3/Axis.js","webpack://lgbtq-state-equality-index/./src/components/charts/ParallelCoordinatesPlotChart.js","webpack://lgbtq-state-equality-index/./src/pages/parallel.js"],"names":["Orientation","Object","TOP","RIGHT","BOTTOM","LEFT","translateX","x","translateY","y","number","scale","d","center","offset","Math","AxisDomain","orient","tickSize","pathAttrs","window","k","range","range0","range1","className","stroke","Tick","value","line","text","tickAttrs","transform","position","opacity","TickLine","lineAttrs","initialAttrs","TickText","tickPadding","tickFormat","ticks","textAttrs","format","spacing","fill","dy","ParallelCoordinatesPlotChart","ys","issues","issue","domain","state","v","d3","margin","width","id","viewBox","fontSize","fontFamily","textAnchor","props","s"],"mappings":"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","file":"component---src-pages-parallel-js-c9fc960949e584ba3391.js","sourcesContent":["import React from 'react';\n\nconst top = 1,\n  right = 2,\n  bottom = 3,\n  left = 4;\n\nexport const Orientation = Object.freeze({\n  TOP: top,\n  RIGHT: right,\n  BOTTOM: bottom,\n  LEFT: left\n});\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction number(scale) {\n  return d => +scale(d);\n}\n\nfunction center(scale, offset) {\n  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return d => +scale(d) + offset;\n}\n\nexport const AxisDomain = ({ orient, scale, tickSize, ...pathAttrs }) => {\n  tickSize = (tickSize === null || tickSize === undefined) ? 6 : tickSize;\n  const offset = typeof window !== 'undefined' && window.devicePixelRatio > 1 ? 0 : 0.5;\n  const k = orient === top || orient === left ? -1 : 1;\n\n  const range = scale.range(),\n    range0 = +range[0] + offset,\n    range1 = +range[range.length - 1] + offset;\n\n  pathAttrs = Object.assign({\n    className: 'domain',\n    stroke: 'currentColor'\n  }, pathAttrs);\n\n  if (orient === left || orient === right) {\n    pathAttrs.d = ((tickSize > 0) ? \"M\" + k * tickSize + \",\" + range0 + \"H\" + offset + \"V\" + range1 + \"H\" + k * tickSize : \"M\" + offset + \",\" + range0 + \"V\" + range1);\n  } else {\n    pathAttrs.d = ((tickSize > 0) ? \"M\" + range0 + \",\" + k * tickSize + \"V\" + offset + \"H\" + range1 + \"V\" + k * tickSize : \"M\" + range0 + \",\" + offset + \"H\" + range1);\n  }\n\n  return <path {...pathAttrs} />;\n\n};\n\nexport const Tick = ({ orient, scale, value, line, text, ...tickAttrs }) => {\n  const offset = typeof window !== 'undefined' && window.devicePixelRatio > 1 ? 0 : 0.5;\n  const transform = orient === top || orient === bottom ? translateX : translateY;\n  const position = (scale.bandwidth ? center : number)(scale.copy(), offset);\n\n  return (\n    <g\n      className=\"tick\"\n      opacity=\"1\"\n      transform={transform(position(value) + offset)}\n      {...tickAttrs}>\n      {line}\n      {text}\n    </g>)\n}\n\nexport const TickLine = ({ orient, tickSize = 6, ...lineAttrs }) => {\n  const k = orient === top || orient === left ? -1 : 1;\n  const x = orient === left || orient === right ? 'x' : 'y';\n\n  const initialAttrs = {\n    stroke: 'currentColor'\n  };\n  initialAttrs[`${x}2`] = k * tickSize\n\n  lineAttrs = Object.assign(initialAttrs, lineAttrs);\n\n  return (\n    <line {...lineAttrs} />\n  );\n};\n\nexport const TickText = ({ orient, tickSize = 6, tickPadding = 3, tickFormat, ticks = [], value, scale, ...textAttrs }) => {\n  const k = orient === top || orient === left ? -1 : 1;\n  const x = orient === left || orient === right ? 'x' : 'y';\n\n  const format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, ticks) : (x) => x) : tickFormat;\n  const spacing = Math.max(+tickSize, 0) + +tickPadding;\n\n  const initialAttrs = {\n    fill: 'currentColor',\n    dy: orient === top ?\n      '0em' :\n      orient === bottom ?\n        '0.71em' :\n        '0.32em'\n  };\n  initialAttrs[x] = k * spacing;\n\n  textAttrs = Object.assign(initialAttrs, textAttrs);\n\n  return (\n    <text {...textAttrs}>\n      {format(value)}\n    </text>\n  );\n}","import * as d3 from 'd3';\nimport React from 'react';\nimport { AxisDomain, Orientation } from '../d3/Axis';\n\nexport const ParallelCoordinatesPlotChart = ({ issues }) => {\n  const ys = {};\n  for (const issue of issues) {\n    const domain = [];\n    for (const state of issue.states) {\n      if (domain.indexOf(state.value) === -1) {\n        domain.push(state.value)\n      }\n    }\n    ys[issue.name] = domain;\n  }\n\n  for (const [_k, v] of Object.entries(ys)) {\n    v.sort(d3.ascending);\n  }\n\n  const margin = { top: 30, right: 60, bottom: 10, left: 60 };\n  const spacer = 100;\n  const height = 900;\n  const width = Object.keys(ys).length * spacer + margin.left + margin.right;\n\n  const xDomain = Object.keys(ys);\n  const x = d3.scaleBand()\n    .domain(Object.keys(ys))\n    .range(Object.keys(ys).length * spacer);\n\n  const [keys, values] = Object.entries(ys);\n  return (\n    <div id=\"parallel-chart\">\n      <svg viewBox={`0,0,${width},${height}`}>\n        <g\n          transform={`translate(${x(0)},${margin.top})`}\n          fill=\"none\"\n          fontSize=\"12\"\n          fontFamily=\"sans-serif\"\n          textAnchor=\"end\">\n        </g>\n      </svg>\n    </div >\n  )\n};","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { ParallelCoordinatesPlotChart } from '../components/charts/ParallelCoordinatesPlotChart'\n\nconst ParallelPage = (props) => {\n  const issues = props.data.sei.issues.edges.map((s) => s.node);\n  return (\n    <ParallelCoordinatesPlotChart issues={issues} />\n  );\n};\n\nexport default ParallelPage;\n\nexport const query = graphql`\nquery ParallelQuery {\n  sei {\n    issues {\n      edges {\n        node {\n          id\n          name\n          states {\n            id\n            name\n            policy\n            value\n          }\n        }\n      }\n    }\n  }\n}\n`;\n"],"sourceRoot":""}