{"version":3,"sources":["webpack://lgbtq-state-equality-index/./node_modules/@material-ui/core/esm/Container/Container.js","webpack://lgbtq-state-equality-index/./node_modules/@material-ui/core/esm/utils/capitalize.js","webpack://lgbtq-state-equality-index/./src/components/d3/Axis.js","webpack://lgbtq-state-equality-index/./src/components/charts/AllStatesScatterPlotChart.js","webpack://lgbtq-state-equality-index/./src/pages/all-states-scatter-plot.js"],"names":["Container","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","root","concat","String","theme","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","capitalize","string","Error","charAt","toUpperCase","slice","Orientation","TOP","RIGHT","BOTTOM","LEFT","translateX","x","translateY","y","number","scale","d","center","offset","AxisDomain","orient","tickSize","pathAttrs","window","k","range","range0","range1","stroke","Tick","line","text","tickAttrs","transform","position","opacity","TickLine","lineAttrs","initialAttrs","TickText","tickPadding","tickFormat","ticks","textAttrs","format","fill","dy","AllStatesScatterPlotChart","height","margin","issues","issue","states","d3","a","b","categories","flattened","row","category","iss","state","abbreviation","region","status","xAxisOrientation","yAxisOrientation","id","viewBox","strokeOpacity","x1","x2","y1","y2","fontSize","fontFamily","textAnchor","key","cx","cy","r","strokeWidth","fillOpacity","data","s","i"],"mappings":"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","file":"component---src-pages-all-states-scatter-plot-js-46135546bcc2a913927b.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\"; // It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\n\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: capitalize(string) expects a string argument.\" : _formatMuiErrorMessage(7));\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","import React from 'react';\n\nconst top = 1,\n  right = 2,\n  bottom = 3,\n  left = 4;\n\nexport const Orientation = Object.freeze({\n  TOP: top,\n  RIGHT: right,\n  BOTTOM: bottom,\n  LEFT: left\n});\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction number(scale) {\n  return d => +scale(d);\n}\n\nfunction center(scale, offset) {\n  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return d => +scale(d) + offset;\n}\n\nexport const AxisDomain = ({ orient, scale, tickSize, ...pathAttrs }) => {\n  tickSize = (tickSize === null || tickSize === undefined) ? 6 : tickSize;\n  const offset = typeof window !== 'undefined' && window.devicePixelRatio > 1 ? 0 : 0.5;\n  const k = orient === top || orient === left ? -1 : 1;\n\n  const range = scale.range(),\n    range0 = +range[0] + offset,\n    range1 = +range[range.length - 1] + offset;\n\n  pathAttrs = Object.assign({\n    className: 'domain',\n    stroke: 'currentColor'\n  }, pathAttrs);\n\n  if (orient === left || orient === right) {\n    pathAttrs.d = ((tickSize > 0) ? \"M\" + k * tickSize + \",\" + range0 + \"H\" + offset + \"V\" + range1 + \"H\" + k * tickSize : \"M\" + offset + \",\" + range0 + \"V\" + range1);\n  } else {\n    pathAttrs.d = ((tickSize > 0) ? \"M\" + range0 + \",\" + k * tickSize + \"V\" + offset + \"H\" + range1 + \"V\" + k * tickSize : \"M\" + range0 + \",\" + offset + \"H\" + range1);\n  }\n\n  return <path {...pathAttrs} />;\n\n};\n\nexport const Tick = ({ orient, scale, value, line, text, ...tickAttrs }) => {\n  const offset = typeof window !== 'undefined' && window.devicePixelRatio > 1 ? 0 : 0.5;\n  const transform = orient === top || orient === bottom ? translateX : translateY;\n  const position = (scale.bandwidth ? center : number)(scale.copy(), offset);\n\n  return (\n    <g\n      className=\"tick\"\n      opacity=\"1\"\n      transform={transform(position(value) + offset)}\n      {...tickAttrs}>\n      {line}\n      {text}\n    </g>)\n}\n\nexport const TickLine = ({ orient, tickSize = 6, ...lineAttrs }) => {\n  const k = orient === top || orient === left ? -1 : 1;\n  const x = orient === left || orient === right ? 'x' : 'y';\n\n  const initialAttrs = {\n    stroke: 'currentColor'\n  };\n  initialAttrs[`${x}2`] = k * tickSize\n\n  lineAttrs = Object.assign(initialAttrs, lineAttrs);\n\n  return (\n    <line {...lineAttrs} />\n  );\n};\n\nexport const TickText = ({ orient, tickSize = 6, tickPadding = 3, tickFormat, ticks = [], value, scale, ...textAttrs }) => {\n  const k = orient === top || orient === left ? -1 : 1;\n  const x = orient === left || orient === right ? 'x' : 'y';\n\n  const format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, ticks) : (x) => x) : tickFormat;\n  const spacing = Math.max(+tickSize, 0) + +tickPadding;\n\n  const initialAttrs = {\n    fill: 'currentColor',\n    dy: orient === top ?\n      '0em' :\n      orient === bottom ?\n        '0.71em' :\n        '0.32em'\n  };\n  initialAttrs[x] = k * spacing;\n\n  textAttrs = Object.assign(initialAttrs, textAttrs);\n\n  return (\n    <text {...textAttrs}>\n      {format(value)}\n    </text>\n  );\n}","import React from 'react';\nimport * as d3 from 'd3';\nimport { AxisDomain, Orientation, Tick, TickLine, TickText } from '../d3/Axis';\n\nexport const AllStatesScatterPlotChart = (props) => {\n  const width = 620;\n  const height = 400;\n  const margin = { top: 30, right: 270, bottom: 20, left: 260 };\n  //const margin = { top: 0, right: 0, bottom: 0, left: 0 };\n\n  let issues = {};\n\n  //const issues = prop.issues.map((issue) => {\n\n  //})\n  for (const issue of props.issues) {\n\n    /*if (issues[issue.node.id]) {\n      if issues[issue.node.id]\n    }*/\n    issues[issue.id] = issue.name;\n  }\n\n  const states = props.states\n    .map((s) => s)\n    .sort((a, b) => d3.ascending(a.id, b.id));\n\n\n  const categories = ['TRANSGENDER_HEALTHCARE', 'SCHOOL_ANTI_BULLYING', 'PUBLIC_ACCOMMODATIONS',\n    'MARRIAGE_EQUALITY', 'HOUSING', 'HATE_CRIMES', 'GENDER_MARKER_UPDATES_ON_IDENTIFICATION',\n    'EMPLOYMENT', 'EDUCATION', 'DISCRIMINATION_IN_CHILD_WELFARE', 'ANTI_CONVERSION_THERAPY'].map((n) => issues[n]);\n\n  const y = d3.scalePoint()\n    .domain(categories)\n    .range([0, height - margin.bottom])\n    .padding(1);\n\n  const x = d3.scaleLinear()\n    .domain([-6, 6])\n    .range([0, width - margin.right]);\n\n  const flattened = states.flatMap(row => {\n    return categories.map(category => {\n      const issue = row.issues.find((iss) => iss.name === category);\n      return {\n        state: row.name,\n        abbreviation: row.id,\n        region: row.region,\n        category,\n        status: issue.policy,\n        value: issue.value\n      };\n    })\n  });\n  // issue[value] = [{state, abbreviatoin, region, category, stat}]\n\n  const xAxisOrientation = Orientation.BOTTOM;\n  const yAxisOrientation = Orientation.LEFT;\n\n  return (\n    <div id=\"all-states-scatter-plot\">\n      <svg viewBox={`0, 0, ${width}, ${height}`}>\n        <g stroke=\"currentColor\" strokeOpacity=\"0.1\">\n          {x.ticks().map((d) => {\n            return (\n              <line x1={x(d) + margin.left + 0.5} x2={x(d) + margin.left + 0.5} y1={margin.top} y2={height - margin.bottom} />\n            );\n          })}\n          {categories.map((d) => {\n            return (\n              <line y1={y(d) + margin.top} y2={y(d) + margin.top} x1={margin.left} x2={width} />\n            );\n          })}\n        </g>\n        <g transform={`translate(${margin.left}, ${margin.top})`}\n          /*transform={`translate(0,${height - margin.top - margin.bottom})`}*/\n          fill=\"none\"\n          fontSize=\"12\"\n          fontFamily=\"sans-serif\"\n          textAnchor=\"end\">\n          {y.domain().map((issue) => {\n            return (\n              <Tick orient={yAxisOrientation} scale={y} value={issue} tickSize=\"6\"\n                line={\n                  <TickLine orient={yAxisOrientation} /*tickSize={-height + margin.top} style={{ stroke: '#bbb', strokeWidth: 0.5, strokeDashArray: '4, 2' }}*/ />\n                }\n                text={\n                  <TickText orient={yAxisOrientation} scale={y} value={issue} fontSize=\"10\" />\n                }\n              />\n            )\n          })}\n        </g>\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          {flattened.map((d) => {\n            // Should use larger bubbles to indicate impact instead of\n            // overlapping circles.  Can do it by state count and by population.\n            return (\n              <g key={`datapoint-${d.state}-${d.category}`}>\n                <circle\n                  cx={x(d.value) + 0.5}\n                  cy={y(d.category)}\n                  r=\"3\"\n                  fill={d3.schemeTableau10[categories.indexOf(d.category)]}\n                  strokeWidth=\"0\"\n                  fillOpacity=\"0.7\" />\n                <title>{`${d.state}: ${d.category}, ${d.status}`}</title>\n              </g >\n            );\n          })}\n        </g>\n        <g transform={`translate(${margin.left},${height - margin.bottom })`}\n          fill=\"none\"\n          fontSize=\"12\"\n          fontFamily=\"sans-serif\"\n          textAnchor=\"start\">\n          {x.ticks().map((value) => {\n            return (\n              <Tick orient={xAxisOrientation} scale={x} value={value}\n                line={\n                  <TickLine orient={xAxisOrientation} strokeWidth=\"0.7\" />\n                }\n                text={\n                  <TickText orient={xAxisOrientation} scale={x} value={value} fontSize=\"8\" tickPadding=\"0\" />\n                }\n              />\n            )\n          })}\n        </g>\n      </svg>\n    </div >\n  )\n};","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { AllStatesScatterPlotChart } from '../components/charts/AllStatesScatterPlotChart';\nimport { Container } from '@material-ui/core';\n\nconst AllStatesScatterPlotPage = ({ data }) => {\n  const states = data.sei.states.edges.map((s) => s.node);\n  const issues = data.sei.issues.edges.map((i) => i.node);\n\n  return (\n    <main>\n      <Container maxWidth=\"lg\">\n        <h1>State Equality Index 2020 - All States</h1>\n        <AllStatesScatterPlotChart\n          states={states}\n          issues={issues} />\n      </Container>\n    </main>\n  )\n};\n\nexport default AllStatesScatterPlotPage;\n\nexport const query = graphql`\n  query AllStatesScatterPlotPageQuery {\n    sei {\n      states {\n        edges {\n          node {\n            id\n            name\n            region\n            issues {\n              kind\n              name\n              policy\n              value\n            }\n          }\n        }\n      }\n      issues {\n        edges {\n          node {\n            id\n            name\n            states {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n`;"],"sourceRoot":""}