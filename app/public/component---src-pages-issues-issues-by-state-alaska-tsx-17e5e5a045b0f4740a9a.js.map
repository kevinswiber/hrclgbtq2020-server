{"version":3,"sources":["webpack://lgbtq-state-equality-index/./src/pages/issues/issues-by-state/alaska.tsx"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","tableContainer","marginBottom","table","tableLinks","slugify","state","toLowerCase","replace","slugMap","reverseSlugMap","props","useState","current","setCurrent","states","data","sei","edges","map","s","node","classes","useEffect","parts","location","pathname","split","currentState","length","sorted","sort","a","b","d3","name","slug","select","className","pageStyles","shrink","htmlFor","id","native","inputProps","onChange","e","value","target","navigate","key","d","find","maxWidth","issues","component","Paper","row","kind","scope","policy","i","to"],"mappings":"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","file":"component---src-pages-issues-issues-by-state-alaska-tsx-17e5e5a045b0f4740a9a.js","sourcesContent":["import * as d3 from \"d3\";\nimport React, { ReactElement, useEffect, useState } from \"react\";\nimport { PageProps, graphql, navigate, Link } from \"gatsby\";\nimport {\n  Container,\n  FormControl,\n  InputLabel,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  makeStyles,\n} from \"@material-ui/core\";\nimport * as queryString from \"query-string\";\nimport { Chart } from \"../../../features/issues/issues-by-state/Chart\";\nimport * as pageStyles from \"./issues-by-state.module.css\";\nimport { Data } from \"../../../definitions/types\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableContainer: {\n    marginTop: 20,\n    marginBottom: 60,\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableLinks: {\n    marginBottom: 40,\n  },\n}));\n\nconst slugify = (state: string) =>\n  state.toLowerCase().replace(\" \", \"-\").replace(\",\", \"\");\nconst slugMap: { [slug: string]: string } = {};\nconst reverseSlugMap: { [stateName: string]: string } = {};\n\nconst IssuesByStatePage = (props: PageProps<Data>): ReactElement => {\n  const [current, setCurrent] = useState<string>();\n  const states = props.data.sei.states.edges.map(s => s.node);\n  const classes = useStyles();\n\n  useEffect(() => {\n    /*\n    let currentState = \"\";\n    if (props.location.search) {\n      const parsed = queryString.parse(props.location.search);\n      if (parsed.state) {\n        currentState = parsed.state as string;\n      }\n    }\n    */\n\n    const parts = props.location.pathname.split(\"/\");\n    const currentState = parts[parts.length - 1];\n\n    setCurrent(currentState !== \"issues-by-state\" ? currentState : \"\");\n  });\n\n  const change = (value: string) => {\n    setCurrent(value);\n    navigate(`/issues/issues-by-state/${value}`, { state: value });\n  };\n\n  const sorted = states.sort((a, b) => d3.ascending(a.name, b.name));\n\n  for (const s of sorted) {\n    const slug = slugify(s.name);\n    slugMap[slug] = s.name;\n    reverseSlugMap[s.name] = slug;\n  }\n\n  const select = (\n    <FormControl className={`${classes.formControl} ${pageStyles.noprint}`}>\n      <InputLabel shrink htmlFor=\"state-select\" id=\"state-label\">\n        State\n      </InputLabel>\n      <Select\n        native\n        inputProps={{ name: \"state\", id: \"state-select\" }}\n        onChange={e => change(e.target.value as string)}\n        value={current}\n      >\n        <option key=\"none\" value=\"\">\n          None\n        </option>\n        {sorted.map(d => {\n          return (\n            <option key={d.id} value={reverseSlugMap[d.name]}>\n              {d.name}\n            </option>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n\n  const data =\n    current && current !== \"\"\n      ? states.find(s => s.name === slugMap[current])\n      : null;\n\n  return (\n    <Container maxWidth=\"md\">\n      <h2>{(data && data.name) || \"\"} State policies for LGBTQ+ issues</h2>\n      {select}\n      {data && (\n        <div>\n          <Chart data={data.issues} />\n          <TableContainer className={classes.tableContainer} component={Paper}>\n            <Table className={classes.table} aria-label=\"state policy table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Issue</TableCell>\n                  <TableCell>Policy</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.issues.map(row => {\n                  return (\n                    <TableRow key={row.kind}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell>{row.policy}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Container className={classes.tableLinks}>\n            {states.map((state, i) => {\n              return (\n                <>\n                  {state.name !== data.name && (\n                    <Link\n                      to={`${location.pathname}?state=${slugify(state.name)}`}\n                    >\n                      {state.name}\n                    </Link>\n                  )}\n                  {state.name === data.name && state.name}\n                  {i < states.length - 1 && <span> | </span>}\n                </>\n              );\n            })}\n          </Container>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default IssuesByStatePage;\n\nexport const query = graphql`\n  query IssuesByStateAlaskaQuery {\n    sei {\n      states {\n        edges {\n          node {\n            id\n            name\n            region\n            district\n            score {\n              kind\n              description\n            }\n            issues {\n              kind\n              name\n              policy\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}